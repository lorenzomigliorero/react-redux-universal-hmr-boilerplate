@import "variables";

$flexboxgrid-grid-columns: map-get($flexboxgrid, columns);
$flexboxgrid-gutter-width: map-get($flexboxgrid, gutterWidth);
$flexboxgrid-max-width: map-get($flexboxgrid, maxWidth);
$gutter-compensation: map-get($flexboxgrid, gutterWidth) * -1;
$flexboxgrid-breakpoints: map-get($flexboxgrid, breakpoints);

@mixin col-common() {
	box-sizing: border-box;
	width: 100%;
	min-height: 1px;
	padding-right: $flexboxgrid-gutter-width;
	padding-left: $flexboxgrid-gutter-width;
}

@mixin flexboxgrid-sass-col-common {
	flex-grow: 0;
	flex-shrink: 0;
}

.container-fluid,
.container {
	box-sizing: border-box;
	max-width: 100%;
	margin-right: auto;
	margin-left: auto;
	padding-right: $flexboxgrid-gutter-width;
	padding-left: $flexboxgrid-gutter-width;
}

.container {
	max-width: $flexboxgrid-max-width;
}

.row {
	display: flex;
	flex-direction: row;
	box-sizing: border-box;
	margin-right: $gutter-compensation;
	margin-left: $gutter-compensation;
	flex: 1 0 auto;
	flex-wrap: wrap;
}

.row.reverse {
	flex-direction: row-reverse;
}

.col.reverse {
	flex-direction: column-reverse;
}

@each $name, $size in $flexboxgrid-breakpoints {

	@for $i from 1 through $flexboxgrid-grid-columns {

		.col-#{$name}-#{$i} {
			@include col-common();
		}
	}
	@media only screen and ($size) {
		@for $i from 1 through $flexboxgrid-grid-columns {

			.col-#{$name}-#{$i} {
				@include flexboxgrid-sass-col-common;
				max-width: 100% / $flexboxgrid-grid-columns * $i;
				flex-basis: 100% / $flexboxgrid-grid-columns * $i;
			}
		}
		@for $i from 0 through $flexboxgrid-grid-columns {

			.col-#{$name}-offset-#{$i} {
				@include flexboxgrid-sass-col-common;
				@if $i == 0 {
					margin-left: 0;
				} @else {
					margin-left: 100% / $flexboxgrid-grid-columns * $i;
				}
			}
		}

		.col-#{$name} {
			@include col-common();
			@include flexboxgrid-sass-col-common;
			max-width: 100%;
			flex-grow: 1;
			flex-basis: 0;
		}

		.start-#{$name} {
			text-align: left;
			justify-content: flex-start;
		}

		.center-#{$name} {
			text-align: center;
			justify-content: center;
		}

		.end-#{$name} {
			text-align: right;
			justify-content: flex-end;
		}

		.top-#{$name} {
			align-items: flex-start;
		}

		.middle-#{$name} {
			align-items: center;
		}

		.bottom-#{$name} {
			align-items: flex-end;
		}

		.around-#{$name} {
			justify-content: space-around;
		}

		.between-#{$name} {
			justify-content: space-between;
		}

		.first-#{$name} {
			order: -1;
		}

		.last-#{$name} {
			order: 1;
		}
	}
}